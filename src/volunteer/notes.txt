LINUX:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
sudo apt-get install php5
sudo apt-get install mysql / sudo apt-get install mysql-client-core-5.5 / sudo apt-get install mysql-client mysql-server
sudo apt-get install php5-mysql
service httpd restart
sudo /etc/init.d/apache2 stop
sudo service apache2 restart
...




SQL:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
mysql -u USER -p
> PASSWORD
mysql -u USER -h localhost -p'PASSWORD'

create user 'richie'@'localhost' identified by 'qwerty';
drop user 'richie'@'localhost';
grant all privileges on * . * to 'richie'@'localhost';
flush privileges;

...

mysql -h localhost -u richie -p'qwerty';

create database volunteering;
use volunteering;

create table users(id int not null auto_increment primary, username varchar(32) not null, password varchar(2048) not null)
alter table users 

show databases;
use DATABASE;
show tables;

TYPES: int, bigint, float, double, date (YYYY-MM-DD), datetime (YYYY-MM-DD HH:MM:SS.fraction), timestamp (YYYY-MM-DD HH:MM:SS - seconds), varchar(0-65535), text(~2^16), mediumtext(2^24), longtext (2^32), 


foriegn key - not used importantly
CREATE TABLE department (id NOT NULL)
CREATE TABLE employee (id NOT NULL, dept_id NOT NULL, FOREIGN KEY (dept_id) REFERENCES department(id))

default
ALTER TABLE `table`  ADD COLUMN `column` FLOAT(10,2) NOT NULL DEFAULT '0.00'

drop table users;


























insert into users (username, password) values ("richie","123");
select * from users;

----------------------
mysql -h localhost -u richie -p'qwerty'
create database volunteering;
use volunteering;
show tables;

alter table users


 +---------------------------------------------+
 |                    - 18 -                   |
 +---------------------------------------------+
 |   HELP WANTED - Dorm Supply 6:00AM-8:00AM   |
 +---------------------------------------------+
 |      HELP WANTED - Linens 5:30PM-7:00PM     |
 +---------------------------------------------+
 |    HELP WANTED - Dinner 1 5:00PM-7:00PM     |
 +---------------------------------------------+
 |       Richie - Dinner 2 5:00PM-7:00PM       |
 +---------------------------------------------+
 |        John - Dinner 3 5:00PM-7:00PM        |
 +---------------------------------------------+
 |     Maxamillion - Dinner 4 5:00PM-7:00PM    |
 +---------------------------------------------+
 |                                             |
 |                                             |
 |                                             |
 |                                             |
 |                                             |
 +---------------------------------------------+

 +---------------------------------------------+
 |                 Previous                    |
 +---------------------------------------------+
 |    Dinner - May 15, 2013  5:00PM-7:00PM     |
 +---------------------------------------------+
 |                   Next                      |
 +---------------------------------------------+
 |  Dorm Supply - May 21, 2013  5:00PM-7:00PM  |
 +---------------------------------------------+



 +---------------------------------------------+
 |                                             |
 |                                             |
 |         Please log into your shift          |
 |                                             |
 |        First Name [               ]         |
 |         Last Name [               ]         |
 |                                             |
 |                   [ OK ]                    |
 |                  [ Reset ]                  |
 |                                             |
 +---------------------------------------------+ 
 Check for all un-logged shifts starting/stopping within 1-2 hours from current time
 +---------------------------------------------+
 |                                             |
 |           Please verify your shift          |
 |                                             |
 |                Richie Zirbes                |
 |         Dorm Supply 5:00PM - 7:00PM         |
 |                                             |
 |                 [ Confirm ]                 |
 |                                             |
 |                 [ Cancel ]                  |
 |                                             |
 +---------------------------------------------+ 
 Check for all un-logged shifts starting within 1 hour of previous shift finish time
 +---------------------------------------------+
 |                                             |
 |   It appears you also have another shift.   |
 |   Would you like to log in for this too?    |
 |                                             |
 |         Dorm Supply 7:00PM - 8:30PM         |
 |                                             |
 |                   [ Yes ]                   |
 |                                             |
 |                   [ No ]                    |
 |                                             |
 +---------------------------------------------+
If no shifts are found (assigned to user) => show list of all shifts within the next day (and minus a few hours of current time)
If no user is found => refresh to login page with error "User not found"



PERMISSIONS:

ADMIN:
USERS_CREATE
USERS_READ
USERS_UPDATE
USERS_DELETE
EMAIL_SEND
SHIFT_CREATE

TERMINAL:
LOGIN_SCREEN


USER:





1024 bits / 4 = 256 chars
256 bits / 4 = 64 chars
         1         2         3         4         5         6
1234567890123456789012345678901234567890123456789012345678901234567890
0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF




NEW TABLE DESIGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
drop database volunteering;
create database volunteering;
mysql -h localhost -u richie -p'qwerty';
use volunteering;
# DROP ALL TABLES
drop table if exists users;
drop table if exists sessions;
drop table if exists groups;
drop table if exists positions;
drop table if exists shifts;
drop table if exists requests;
# USERS
drop table if exists users;
create table users(
id int not null auto_increment primary key,
group_id int,
created datetime,
modified datetime,
username varchar(32) not null,
password varchar(128) not null,
first_name varchar(32),
last_name varchar(32),
email varchar(64) not null,
phone varchar(32),
city varchar(64),
state varchar(64),
zip varchar(16),
preferences varchar(2048) #k1=v1,k2=v2,... showfirstname=1,showlastname=0,timezone=+8,
);
#SESSIONS
drop table if exists sessions;
create table sessions(
id int not null auto_increment primary key,
user_id int,
ip_remote varchar(32),
ip_forward varchar(32),
session_id varchar(64) #0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF
);
# GROUPS
drop table if exists groups;
create table groups(
id int not null auto_increment primary key,
name varchar(32), # admin or user
info varchar(1024)
);
# POSITIONS
drop table if exists positions;
create table positions(
id int not null auto_increment primary key,
created_user_id int, # creator
created datetime, # time created
modified_user_id int, # creator
modified datetime, # time modified
name varchar(32), # short title
info varchar(2048) # longer job description
);
# SHIFTS
drop table if exists shifts;
create table shifts(
id int not null auto_increment primary key,
created datetime, # time created if parent | time assigned if child
# modified datetime, # not used
parent_id int, # 0 if parent | shift id generator if child
user_id int, # creator if parent | owner if child
position_id int, # position reference same if parent | child
time_begin datetime, # start day if parent | start shift if child
time_end datetime, # start day if parent | start shift if child
algorithm varchar(2048) # string if parent | null if child
);
# REQUESTS - AKA SWAPS
drop table if exists requests;
create table requests(
id int not null auto_increment primary key,
created datetime, # requested
shift_id int,
request_user_id int,
fulfill_user_id int,
fulfill_date datetime, # filled
approved_user_id int, # admin
approved_date datetime, # decided
info varchar(1024), # request reasoning explanation
status int, # 0=open, 1=closed
decision int # 0=deny, 1=accept
);

# GROUPS
insert into groups (name, info) values ("admin","CRUD - everything");
insert into groups (name, info) values ("staff","staff member");
insert into groups (name, info) values ("volunteer","volunteer user");
# USERS
insert into users (username, password, email, first_name, last_name, phone, state, city, zip, group_id, created, modified) values ("richie","0DD3E512642C97CA3F747F9A76E374FBDA73F9292823C0313BE9D78ADD7CDD8F72235AF0C553DD26797E78E1854EDEE0AE002F8ABA074B066DFCE1AF114E32F8","zirbsster@gmail.com", "Richie", "Zirbes", "555-555-5555", "CO", "Boulder", "12345", (select id from groups where name="admin"), now(), now() );
insert into users (username, password, email, first_name, last_name, phone, state, city, zip, group_id, created, modified) values ("john","0DD3E512642C97CA3F747F9A76E374FBDA73F9292823C0313BE9D78ADD7CDD8F72235AF0C553DD26797E78E1854EDEE0AE002F8ABA074B066DFCE1AF114E32F8","john.smith@gmail.com", "John", "Smith", "555-555-5555", "WY", "Cheyenne", "56789", (select id from groups where name="staff"), now(), now() );
insert into users (username, password, email, first_name, last_name, phone, state, city, zip, group_id, created, modified) values ("greg","0DD3E512642C97CA3F747F9A76E374FBDA73F9292823C0313BE9D78ADD7CDD8F72235AF0C553DD26797E78E1854EDEE0AE002F8ABA074B066DFCE1AF114E32F8","gregg@yahoo.net", "Greg", "Garner", "303-333-5555", "UT", "Salt Lake City", "12121", (select id from groups where name="volunteer"), now(), now() );
# POSITIONS
insert into positions (user_id,created,modified,name,info) values ((select id from users where username="richie"),now(),now(),"Sunrise","Work in the morning");
insert into positions (user_id,created,modified,name,info) values ((select id from users where username="richie"),now(),now(),"Short","Work in the evening");
insert into positions (user_id,created,modified,name,info) values ((select id from users where username="richie"),now(),now(),"Medium","Work in the evening");
insert into positions (user_id,created,modified,name,info) values ((select id from users where username="richie"),now(),now(),"Long","Work late");
insert into positions (user_id,created,modified,name,info) values ((select id from users where username="richie"),now(),now(),"Overnight","Work through the night");
insert into positions (user_id,created,modified,name,info) values ((select id from users where username="richie"),now(),now(),"Backup","Be available for work");
insert into positions (user_id,created,modified,name,info) values ((select id from users where username="richie"),now(),now(),"Management Backup","Be available for management");

# SHIFTS
# REQUESTS



REQUEST:
1) CREATE REQUEST
	- requestee & shift
2) FULFILL REQUEST
	- requester
3) APPROVE REQUEST
	- admin
A) DELETE REQUEST
	- admin 



select id,created,parent_id,user_id,position_id,time_begin,time_end from shifts where time_begin between "2013-07-10" and "2013-07-15" and parent_id!=0;
select id,created,parent_id,user_id,position_id,time_begin,time_end from shifts where time_begin between "2013-07-10" and "2013-07-15" and parent_id!=0;





select * from users where modified >'2013-09-03';

SELECT * FROM players WHERE DATE(us_reg_date) BETWEEN '2000-07-05' AND '2011-11-10'

SELECT * FROM players WHERE us_reg_date >= '2000-07-05' AND us_reg_date < '2011-11-10' + interval 1 day

select * from players where  us_reg_date between '2000-07-05' and DATE_ADD('2011-11-10',INTERVAL 1 DAY)


TODO-----------
send email
large calendar
mini calendar
vertical calendar
integrate php + js + sql tables via server interface
viewing pages
editing/updating pages
deleting
login screen



NEW TODO-----------
remove all console.log() and replace errors with alert()s




http://www.cs.wcupa.edu/~rkline/php/sessions.html
http://www.wikihow.com/Create-a-Secure-Login-Script-in-PHP-and-MySQL#Create_PHP_Functions








// select groups.name, users.username, users.id   from users   inner join groups   on   users.group_id=groups.id;


select id,created,modified,shift_id,request_user_id,fulfill_user_id,approved_user_id,info,status   from requests   order by approved_user_id asc, created desc;